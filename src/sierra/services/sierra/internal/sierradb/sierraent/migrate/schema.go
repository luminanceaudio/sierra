// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CollectionsColumns holds the columns for the "collections" table.
	CollectionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
	}
	// CollectionsTable holds the schema information for the "collections" table.
	CollectionsTable = &schema.Table{
		Name:       "collections",
		Columns:    CollectionsColumns,
		PrimaryKey: []*schema.Column{CollectionsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "collection_id",
				Unique:  true,
				Columns: []*schema.Column{CollectionsColumns[0]},
			},
			{
				Name:    "collection_name",
				Unique:  false,
				Columns: []*schema.Column{CollectionsColumns[2]},
			},
		},
	}
	// CollectionSamplesColumns holds the columns for the "collection_samples" table.
	CollectionSamplesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "sample_id", Type: field.TypeString},
		{Name: "collection_id", Type: field.TypeUUID},
	}
	// CollectionSamplesTable holds the schema information for the "collection_samples" table.
	CollectionSamplesTable = &schema.Table{
		Name:       "collection_samples",
		Columns:    CollectionSamplesColumns,
		PrimaryKey: []*schema.Column{CollectionSamplesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "collection_samples_source_samples_sample",
				Columns:    []*schema.Column{CollectionSamplesColumns[2]},
				RefColumns: []*schema.Column{SourceSamplesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "collection_samples_collections_collection",
				Columns:    []*schema.Column{CollectionSamplesColumns[3]},
				RefColumns: []*schema.Column{CollectionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "collectionsample_sample_id",
				Unique:  false,
				Columns: []*schema.Column{CollectionSamplesColumns[2]},
			},
			{
				Name:    "collectionsample_collection_id",
				Unique:  false,
				Columns: []*schema.Column{CollectionSamplesColumns[3]},
			},
			{
				Name:    "collectionsample_sample_id_collection_id",
				Unique:  true,
				Columns: []*schema.Column{CollectionSamplesColumns[2], CollectionSamplesColumns[3]},
			},
		},
	}
	// SamplesColumns holds the columns for the "samples" table.
	SamplesColumns = []*schema.Column{
		{Name: "sha256", Type: field.TypeString, Unique: true},
		{Name: "format", Type: field.TypeString, Nullable: true},
		{Name: "duration", Type: field.TypeInt64, Nullable: true},
	}
	// SamplesTable holds the schema information for the "samples" table.
	SamplesTable = &schema.Table{
		Name:       "samples",
		Columns:    SamplesColumns,
		PrimaryKey: []*schema.Column{SamplesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "sample_sha256",
				Unique:  true,
				Columns: []*schema.Column{SamplesColumns[0]},
			},
		},
	}
	// SourcesColumns holds the columns for the "sources" table.
	SourcesColumns = []*schema.Column{
		{Name: "uri", Type: field.TypeString, Unique: true},
		{Name: "create_time", Type: field.TypeTime},
	}
	// SourcesTable holds the schema information for the "sources" table.
	SourcesTable = &schema.Table{
		Name:       "sources",
		Columns:    SourcesColumns,
		PrimaryKey: []*schema.Column{SourcesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "source_uri",
				Unique:  true,
				Columns: []*schema.Column{SourcesColumns[0]},
			},
		},
	}
	// SourceSamplesColumns holds the columns for the "source_samples" table.
	SourceSamplesColumns = []*schema.Column{
		{Name: "uri", Type: field.TypeString, Unique: true},
		{Name: "relative_path", Type: field.TypeString},
		{Name: "filename", Type: field.TypeString},
		{Name: "source", Type: field.TypeString},
		{Name: "sample", Type: field.TypeString},
	}
	// SourceSamplesTable holds the schema information for the "source_samples" table.
	SourceSamplesTable = &schema.Table{
		Name:       "source_samples",
		Columns:    SourceSamplesColumns,
		PrimaryKey: []*schema.Column{SourceSamplesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "source_samples_sources_source",
				Columns:    []*schema.Column{SourceSamplesColumns[3]},
				RefColumns: []*schema.Column{SourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "source_samples_samples_sample",
				Columns:    []*schema.Column{SourceSamplesColumns[4]},
				RefColumns: []*schema.Column{SamplesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "sourcesample_uri",
				Unique:  true,
				Columns: []*schema.Column{SourceSamplesColumns[0]},
			},
			{
				Name:    "sourcesample_relative_path",
				Unique:  false,
				Columns: []*schema.Column{SourceSamplesColumns[1]},
			},
			{
				Name:    "sourcesample_filename",
				Unique:  false,
				Columns: []*schema.Column{SourceSamplesColumns[2]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CollectionsTable,
		CollectionSamplesTable,
		SamplesTable,
		SourcesTable,
		SourceSamplesTable,
	}
)

func init() {
	CollectionSamplesTable.ForeignKeys[0].RefTable = SourceSamplesTable
	CollectionSamplesTable.ForeignKeys[1].RefTable = CollectionsTable
	SourceSamplesTable.ForeignKeys[0].RefTable = SourcesTable
	SourceSamplesTable.ForeignKeys[1].RefTable = SamplesTable
}
